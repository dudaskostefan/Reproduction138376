// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package bert.actions;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.util.*;
import java.util.concurrent.ForkJoinPool;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import java.math.BigDecimal;

public class KB_Postprocessor extends CustomJavaAction<IMendixObject>
{
	/** @deprecated use KBOutputEntity.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __KBOutputEntity;
	private final bert.proxies.ML_Output_Entity_Multibatch_sequence_tokenizer KBOutputEntity;

	public KB_Postprocessor(
		IContext context,
		IMendixObject _kBOutputEntity
	)
	{
		super(context);
		this.__KBOutputEntity = _kBOutputEntity;
		this.KBOutputEntity = _kBOutputEntity == null ? null : bert.proxies.ML_Output_Entity_Multibatch_sequence_tokenizer.initialize(getContext(), _kBOutputEntity);
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
        final IMendixObject outputObject = Core.instantiate(getContext(), "BERT.KBPredictResponse");

        return outputObject;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "KB_Postprocessor";
	}

	// BEGIN EXTRA CODE

    final int SEQUENCE_LENGTH = 32;
    final int FEATURE_SIZE = 768;

	// END EXTRA CODE
}
